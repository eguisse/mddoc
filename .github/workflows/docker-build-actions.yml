---
name: docker-image-build-action

on:
    push:
        tags:
            - '*.*.*'
    pull_request:
    workflow_dispatch:
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    push_to_registry:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write

        steps:
            - name: Check out the repo
              uses: actions/checkout@v4
              with:
                fetch-depth: 1

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Login to DockerHub
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v1
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            - id: docker_image_metadata
              name: Extract metadata (tags, labels) for Docker
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                      ${{ env.IMAGE_NAME }}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - id: setup-buildx
              name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - id: docker_image_build_push_to_ghcr
              name: Build app, build docker image and Push image to ghcr.io
              uses: docker/build-push-action@v6
              with:
                  platforms: linux/amd64,linux/arm64
                  context: .
                  file: ./Dockerfile
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.docker_image_metadata.outputs.tags }}
                  labels: ${{ steps.docker_image_metadata.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      VERSION=${{ github.ref_name }}
                      COMMIT_SHA=${{ github.sha }}

            - id: docker_image_digest
              name: Show Docker Image digest
              run: echo ${{ steps.docker_image_build_push_to_ghcr.outputs.digest }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  subject-digest: ${{ steps.docker_image_build_push_to_ghcr.outputs.digest }}
                  push-to-registry: false


